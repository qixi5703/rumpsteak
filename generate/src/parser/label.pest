
char = @{ ASCII_ALPHANUMERIC | "_" }
raw_ident = @{ ASCII_DIGIT+ | (ASCII_ALPHA ~ char*) | ("_" ~ char+) }

quoted_ident = { "\"" ~ (char | "\\\"")* ~ "\"" }
ident = { quoted_ident | raw_ident }

send = { "!" }
receive = { "?" }

ltn = { "<" }
gtn = { ">" }
eq = { "==" }
and = { " and " }
or = { " or " }
neg = { "neg " }
op = { ident ~ (ltn | gtn | eq) ~ ident }
compthree = { ident ~ (ltn | gtn ) ~ ident ~ (ltn | gtn ) ~ ident }
basic = { compthree | op }
bool_op = { op ~ (and | or ) ~ op }
neg_op = { neg ~ op }
predicate = { neg_op | bool_op | basic }

incr = { "+" }
decr = { "-" }
mult = { "*" }
div = { "/" }
side_effect = { ident ~ "=" ~ ident ~ ( incr | decr | mult | div ) ~ ident }

param = { ident ~ ":" ~ ident }
parameters = { (param ~ ",")* ~ param? }
label = { "\""? ~ ident ~ (send | receive) ~ ident ~ "(" ~ parameters ~ ")" ~ ( ":" ~ predicate)? ~ ( ":" ~ side_effect)? ~ "\"" }


ltn_bk = { "<" ~ ident }
gtn_bk = { ">" ~ ident }
predicate_bk = { ident ~ (ltn_bk | gtn_bk) }
